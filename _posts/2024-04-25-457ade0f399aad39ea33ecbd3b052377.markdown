---
layout: post
title:  "【TBD】【分報に最適な】memosをCloud Runに上げたい"
date:   2024-04-25 20:21:47 +0900
categories: blog
published: false
---



---
---
---

# 本記事は書き途中です。

---
---
---

# memosとは

[![usememos/memos](img/memos_demoimg.png)](https://github.com/usememos/memos)

青くて飛ぶやつの某SNSライクに使えるメモツール。  
操作感が **【もろソレ】** なので、なにかをメモりたいときに「メモツール立ち上げるのめんどいな」となりにくい。  
ハッシュタグでタグ付けが可能で、特に学会・研修から日々の開発中のナレッジまで、KibelaやEsa、Yammerなど(すなわちブログライクなもの)に上げにくい「登壇者の何気ない一言」や「利用中のツール名」をメモるのに最適。  
「メモツール」であるから、某SNSみたいに一々 "`from:<my_id> https://`" とかする必要すらない。ヒットしないとかもない。  
複数人で使いたいなら、Timelineタブを選ぶことで他人の公開・限定公開投稿も確認可能。これでOSSなのは非常に頭が上がらない。  
  
**開発中のtipsメモ帳が、そのまんま分報にもなるのいいよね。そういうツール。**  
  
但し、スタンドアロンじゃなくてWebサーバとして動作するので、基本VPSや自前鯖、PaaSなどにブチ上げる必要がある。  

# 手っ取り早く動かす方法

tailscale x Raspberry Piでおｋ。  
  
但し、当たり前だが24h365d動作のランニングコストが掛かるので注意。  
オンプレなのでOSのアプデとかも必要。宅内設置なら引いてる回線のSLAと母親の得意技である「掃除中にサーバ給電AC引っこ抜き」へ注意。  

# on GCPという選択肢

「チーム開発するとき、メンバーを自宅ネットへ繋がせたくない」場合や、なんとなくかっこいいのでクラウドを使いたい場合もあるかもしれない。その場合は、GCPのCloud RunとCloud SQLを組み合わせて動かすことで実現可能である。

# 料金体系

TBD

但し、Cloud SQL側が割高なので気を付けよう。  
|spec|price|
|-|-|
|アイオワ / ||
普通にずっと回してたらどれだけ小さいインスタンスでも1,000円はかかるので、こまめに止めることをお勧めする。  

# やり方

## 0. Googleアカウントの作成～プロジェクトの作成

GCPを使う準備を諸々済ませておく。支払いプロファイルの設定も忘れずに。  

## 1. 必要なAPIの有効化

GCPでは、各種プロダクトを利用するのにGCP内のAPIの有効化が求められる。  
  
今回使うのは  

- Cloud Run
- Cloud SQL

なので、GCP Consoleの検索ボックスで検索して、各種ページから有効化すべし。  

## 2. 試しにCloud Runへ建ててみる

とりあえず「データの保存先とか考えず軽くコンテナを建て」てみよう。  
[Cloud Runの管理ページ](https://console.cloud.google.com/run)へ行き、【サービスを作成】してみる。  

- コンテナURL: **`neosmemo/memos:stable`**
- リージョン: **任意** (大阪や東京でOK)
- 認証: **未認証の呼び出しを許可**
- コンテナの編集
  - ポート: **`5230`**
  - メモリ: **128MiB**
- インスタンスの最大数: 10とか

これで適当に建てて、表示されるURLへ飛ぶと何食わぬ顔でmemosを拝める。最高すぎ  
気が済んだら、Cloud Runの管理ページからサービスを削除すること。

## 3. SQLを準備する

先ほど建てた鯖はデータの保存先を指定していないので、当然ながらメモった内容が虚空に行く可能性大。  
これを防止するため、Cloud SQLを建ててそこを参照するように変更する。  
  
[Cloud SQLの管理ページ](https://console.cloud.google.com/sql/instances)へ行き、【インスタンスを作成】する。  
このとき、MySQL、PostgreSQL、SQL Serverを選ぶことができるが、SQL Serverは本記事執筆時点で対応していないので除外。  
MySQLとPostgreSQLはどっちでもいいですが、私はMySQLを採用。  

- パスワード: 自動生成
- エディション: **Enterprise** / **サンドボックス**
- リージョン: **us-west1 (オレゴン)**
- ゾーンの可用性: シングルゾーン
- インスタンスのカスタマイズ
  - マシンの構成
    - マシンシェイプ: 共有コア, 一番小さいやつ
  - ストレージ: HDD 10GB 自動増量を有効にする
  - 接続: ...？

接続？プライベートのほうがいいかしら

## 4. VPCネットワークの構成

というわけで、一旦SQLインスタンスの作成はおいておいて、新しいタブでVPC管理ページへ行きます。

- VPC一覧から `default` を選択
- **プライベート サービス接続** > **サービスに割り当てられたIP範囲** を選択
- **IP 範囲の割り当て** をクリックし、IP空間をつくる。
  - 名前: default-ip-range
  - IP 範囲: 自動, (プレフィックスの長さ: 24)
- サービスへのプライベート接続 タブに移動し、接続を作成する。
  - 割り当て: default-ip-range

